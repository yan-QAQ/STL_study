#include<iostream>
#include<string>
using namespace std;
int main() {
	//string的构造函数
	string s1;
	char *str = "abc";
	string s2 = str;
	string s3(s2);        //string s3=s1;
	string s4(4, 'a');    //4个a
	cout << s1 << endl;
	cout << s2 << endl;
	cout << s3 << endl;
	cout << s4 << endl;
	//string赋值成员函数
	string s5,s6,s7;
	s5.assign("hello world", 7);
	s6.assign(s5);
	s6.assign("hello world");
	s7.assign(10, 'w');
	cout << s5 << endl;
	cout << s6 << endl;
	cout << s7 << endl;

	//'+='功能与append()成员函数类似
	//s.append(str,pos,n),将str中下标从pos开始的n个字符添加到s末尾
	//s.append(char *str,n),将str中前n个字符添加到s末尾
	s2.append(s5, 2, 2);
	s5.append("hello", 4);
	cout << s2 << endl;
	cout << s5 << endl;
	
	//string查找替换
	//int find(const string& str,int pos=0);  从pos开始查找str出现的位置，未找到返回-1.
	//int rfind(const string& str,int pos=0); 从pos开始查找str最后一次出现的位置
	//string& replace(int pos,int n，const char *str); 从pos开始往后的n个字符替换成str
	//string& replace(int pos,int n,const string& str); 从pos开始往后的n个字符替换成str
	string str1;
	str1 = "dej";
	int pos=str1.find("de");
	int pos1 = str1.find("dea");
	cout << pos << " " << pos1 << endl;

	//字符串比较
	//int compare(const char* str) const;
	//int compare(const string& str) const;

	//字符存取
	//char& operator[](int n);
	//char& at(int n);
	
	//string插入和删除
	//string& insert(int pos, const char* s);   插入字符串
	//string& insert(int pos, const string& s); 插入字符串
	//string& insert(int pos,int n,char c);     在指定位置插入n个字符
	//string& erase(int pos,int n=npos);        删除从pos开始的n个字符
	
	//string子串
	//string substr(int pos = 0, int n = npos) const;
	//返回从pos开始的n个字符组成的字符串
}
